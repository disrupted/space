#BlueJ class context
comment0.params=
comment0.target=Game()
comment0.text=\n\ Create\ the\ game\ and\ initialise\ its\ internal\ map.\n
comment1.params=
comment1.target=void\ createRooms()
comment1.text=\n\ Create\ all\ the\ rooms\ and\ link\ their\ exits\ together.\n
comment10.params=command
comment10.target=java.lang.String\ take(Command)
comment11.params=command
comment11.target=java.lang.String\ look(Command)
comment12.params=command
comment12.target=java.lang.String\ showInventory(Command)
comment13.params=command
comment13.target=java.lang.String\ dropItems(Command)
comment14.params=command
comment14.target=java.lang.String\ use(Command)
comment15.params=command
comment15.target=java.lang.String\ teleport(Command)
comment16.params=
comment16.target=void\ printFields()
comment17.params=
comment17.target=java.lang.String\ toString()
comment18.params=command
comment18.target=java.lang.String\ quit(Command)
comment18.text=\ \n\ "Quit"\ was\ entered.\ Check\ the\ rest\ of\ the\ command\ to\ see\n\ whether\ we\ really\ quit\ the\ game.\n\ @return\ null,\ if\ this\ command\ quits\ the\ game,\ something\ else\ to\ output\ otherwise.\n
comment19.params=args
comment19.target=void\ main(java.lang.String[])
comment2.params=
comment2.target=void\ createItems()
comment20.params=ms
comment20.target=void\ wait(int)
comment21.params=
comment21.target=void\ gameOver()
comment22.params=
comment22.target=boolean\ debugMode()
comment23.params=debugMode
comment23.target=void\ setDebugMode(boolean)
comment3.params=
comment3.target=void\ placeItems()
comment4.params=
comment4.target=void\ play()
comment4.text=\n\ \ Main\ play\ routine.\ \ Loops\ until\ end\ of\ play.\n
comment5.params=
comment5.target=void\ printWelcome()
comment5.text=\n\ Print\ out\ the\ opening\ message\ for\ the\ player.\n
comment6.params=commandLine
comment6.target=java.lang.String\ processCommand(java.lang.String)
comment6.text=\n\ This\ is\ a\ further\ method\ added\ by\ BK\ to\ \n\ provide\ a\ clearer\ interface\ that\ can\ be\ tested\:\n\ Game\ processes\ a\ commandLine\ and\ returns\ output.\n\ @param\ commandLine\ -\ the\ line\ entered\ as\ String\n\ @return\ output\ of\ the\ command\n
comment7.params=command
comment7.target=java.lang.String\ processCommand(Command)
comment7.text=\n\ Given\ a\ command,\ process\ (that\ is\:\ execute)\ the\ command.\n\ @param\ command\ The\ command\ to\ be\ processed.\n\ @return\ true\ If\ the\ command\ ends\ the\ game,\ false\ otherwise.\n
comment8.params=
comment8.target=java.lang.String\ printHelp()
comment8.text=\n\ Print\ out\ some\ help\ information.\n\ Here\ we\ print\ some\ stupid,\ cryptic\ message\ and\ a\ list\ of\ the\ \n\ command\ words.\n
comment9.params=command
comment9.target=java.lang.String\ goRoom(Command)
comment9.text=\ \n\ Try\ to\ go\ to\ one\ direction.\ If\ there\ is\ an\ exit,\ enter\n\ the\ new\ room,\ otherwise\ print\ an\ error\ message.\n
numComments=24
